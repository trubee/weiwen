{"version":3,"sources":["utils/index.js","api/config.js","api/fetch.js","pages/PostsPage.js","pages/MsgsPage.js","pages/MyPage.js","App.js","index.js","api/ipfsApi.js"],"names":["IconText","_ref","type","text","onClick","react_default","a","createElement","class","style","marginRight","toast","msg","toast_default","info","network","signatureProvider","JsSignatureProvider","url","rpc","JsonRpc","fetch","fetchAll","Api","chainId","textDecoder","TextDecoder","textEncoder","TextEncoder","Object","asyncToGenerator","regenerator_default","mark","_callee","table","options","res","wrap","_context","prev","next","get_table_rows","objectSpread","json","code","scope","limit","reverse","key_type","index_position","sent","abrupt","rows","stop","_x","_x2","apply","this","arguments","PostsPage","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onRefresh","setState","refreshing","isLoading","data","rData","genOnePageData","dataSource","state","cloneWithRows","pageIndex","onEndReached","event","setTimeout","concat","toConsumableArray","list_view_default","DataSource","rowHasChanged","row1","row2","pIndex","length","undefined","dataOnePage","i","item","push","attachment","href","utils_IconText","ipfsApi","target","rel","src","alt","width","height","_this2","react","nav_bar_default","mode","rightContent","renderRow","rowData","sectionID","rowID","key","padding","card_default","full","Header","title","author","thumb","extra","fontSize","moment","time","valueOf","format","Body","white_space_default","size","className","content","attachtype","renderAttachment","flex_default","color","Item","parseFloat","balance","toFixed","like_num","console","log","id","comment_num","renderSeparator","backgroundColor","borderTop","borderBottom","renderFooter","textAlign","document","documentElement","clientHeight","pullToRefresh","pull_to_refresh_default","pageSize","Component","MsgsPage","tp","require","MyPage","onBtnClick","bind","assertThisInitialized","isConnected","getEosBalance","account","contract","symbol","then","catch","error","button_default","App","selectedTab","createTabItem","icon","selectedIcon","page","badge","tab_bar_default","selected","onPress","unselectedTintColor","tintColor","barTintColor","pages_PostsPage","pages_MsgsPage","pages_MyPage","ReactDOM","render","src_App_0","getElementById","Buffer","__webpack_require__","d","__webpack_exports__","ipfsUrl","ipfs_api__WEBPACK_IMPORTED_MODULE_0__","ipfs_api__WEBPACK_IMPORTED_MODULE_0___default","n","IpfsAPI","protocol","hash"],"mappings":"udAGaA,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,KAAMC,EAAfH,EAAeG,QAAf,OACtBC,EAAAC,EAAAC,cAAA,QAAMH,QAASA,GACbC,EAAAC,EAAAC,cAAA,KAAGC,MAAO,YAAcN,EAAMO,MAAO,CAAEC,YAAa,KACnDP,IAIQQ,EAAQ,SAACC,GACpBC,EAAAP,EAAMQ,KAAKF,EAAK,wCCLZG,EAEM,QAFNA,EAGE,0BAHFA,EAIE,IAJFA,EAKK,mEAGLC,EAAoB,IAAIC,sBAAoB,CAAC,wDAC7CC,EAAMH,EAAmB,MAAQA,EAAe,IAAMA,EAEtDI,EAAM,IAAIC,UAAQF,EAAK,CAAEG,cCflBC,GDgBD,IAAIC,MAAI,CAClBJ,MACAH,oBACAQ,QAAST,EACTU,YAAa,IAAIC,YACjBC,YAAa,IAAIC,cCrBE,eAAA3B,EAAA4B,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAAG,SAAAC,EAAOC,EAAOC,GAAd,IAAAC,EAAA,OAAAL,EAAAzB,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJrB,EAAIsB,eAAJZ,OAAAa,EAAA,EAAAb,CAAA,CAChBc,MAAM,EACNC,KDDa,eCEbC,MDFa,eCGbX,QACAY,MAAO,KACPC,SAAS,EACTC,SAAU,MACVC,eAAgB,GACbd,IAViB,cAChBC,EADgBE,EAAAY,KAAAZ,EAAAa,OAAA,SAYff,EAAIgB,MAZW,wBAAAd,EAAAe,SAAApB,MAAH,gBAAAqB,EAAAC,GAAA,OAAAtD,EAAAuD,MAAAC,KAAAC,YAAA,ICiKNC,cAvJb,SAAAA,EAAYC,GAAO,IAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAA4B,KAAAE,IACjBE,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAA4B,KAAA5B,OAAAmC,EAAA,EAAAnC,CAAA8B,GAAAM,KAAAR,KAAMG,KAuCRM,UAxCmBrC,OAAAC,EAAA,EAAAD,CAAAE,EAAAzB,EAAA0B,KAwCP,SAAAC,IAAA,IAAAG,EAAA,OAAAL,EAAAzB,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVqB,EAAKM,SAAS,CAAEC,YAAY,EAAMC,WAAW,IADnC/B,EAAAE,KAAA,EAEQlB,EAAS,aAFjB,OAEJc,EAFIE,EAAAY,KAGVW,EAAKM,SAAS,CAACG,KAAMlC,IAErByB,EAAKU,MAAQV,EAAKW,iBAClBX,EAAKM,SAAS,CACZM,WAAYZ,EAAKa,MAAMD,WAAWE,cAAcd,EAAKU,OACrDH,YAAY,EACZC,WAAW,IAEbR,EAAKe,UAAY,EAXP,wBAAAtC,EAAAe,SAAApB,MAxCO4B,EAsDnBgB,aAAe,SAACC,GACVjB,EAAKa,MAAML,YACfR,EAAKM,SAAS,CAAEE,WAAW,IAE3BU,WAAW,WACTlB,EAAKU,MAAL,GAAAS,OAAAnD,OAAAoD,EAAA,EAAApD,CAAiBgC,EAAKU,OAAtB1C,OAAAoD,EAAA,EAAApD,CAAgCgC,EAAKW,iBAAiBX,EAAKe,aAC3Df,EAAKM,SAAS,CACZM,WAAYZ,EAAKa,MAAMD,WAAWE,cAAcd,EAAKU,OACrDF,WAAW,KAEZ,OA7DHR,EAAKe,UAAY,EAEjB,IAAMH,EAAa,IAAIS,EAAA5E,EAAS6E,WAAW,CACzCC,cAAe,SAACC,EAAMC,GAAP,OAAgBD,IAASC,KANzB,OASjBzB,EAAKa,MAAQ,CACXJ,KAAM,GACNG,aACAL,YAAY,EACZC,WAAW,GAbIR,gFAmBjB,IAFyB,IAAZ0B,EAAY7B,UAAA8B,OAAA,QAAAC,IAAA/B,UAAA,GAAAA,UAAA,GAAH,EAChBgC,EAAc,GACXC,EAAI,EAAGA,EAvBC,GAuBiBA,IAAK,CACrC,IAAMC,EAAOnC,KAAKiB,MAAMJ,KAxBT,GAwBciB,EAAwBI,QACzCF,IAATG,GACDF,EAAYG,KAAKD,GAGrB,OAAOF,4KAIWpE,EAAS,oBAArBc,SACNqB,KAAKU,SAAS,CAACG,KAAMlC,IAErBqB,KAAKc,MAAQd,KAAKe,iBAClBf,KAAKU,SAAS,CACZM,WAAYhB,KAAKiB,MAAMD,WAAWE,cAAclB,KAAKc,OACrDH,YAAY,EACZC,WAAW,+IA+BEnE,EAAM4F,GACrB,OAAY,IAAT5F,EACMG,EAAAC,EAAAC,cAAA,KAAGwF,KAAMD,GAAYzF,EAAAC,EAAAC,cAACyF,EAAD,CAAU9F,KAAK,YAAYC,KAAM2F,KAC7C,IAAT5F,EACAG,EAAAC,EAAAC,cAAA,KAAGwF,KAAME,IAAgBH,IAAazF,EAAAC,EAAAC,cAACyF,EAAD,CAAU9F,KAAK,YAAYC,KAAM2F,KAC9D,IAAT5F,EAELG,EAAAC,EAAAC,cAAA,KAAGwF,KAAME,IAAgBH,GAAaI,OAAO,SAASC,IAAI,uBACxD9F,EAAAC,EAAAC,cAAA,OAAK6F,IAAKH,IAAgBH,GAAaO,IAAI,GAAG5F,MAAO,CAAC6F,MAAO,IAAKC,OAAQ,QAIzE,oCAGA,IAAAC,EAAA/C,KAgCP,OACEpD,EAAAC,EAAAC,cAACkG,EAAA,SAAD,KACEpG,EAAAC,EAAAC,cAAAmG,EAAApG,EAAA,CAAQqG,KAAK,OAAOC,aAAa,gBAAjC,gBAGAvG,EAAAC,EAAAC,cAAA2E,EAAA5E,EAAA,CACEmE,WAAYhB,KAAKiB,MAAMD,WACvBoC,UAtCM,SAACC,EAASC,EAAWC,GAC/B,IAAMpB,EAAOkB,EACb,OACEzG,EAAAC,EAAAC,cAAA,OAAK0G,IAAKD,EAAOvG,MAAO,CAAEyG,QAAS,WACjC7G,EAAAC,EAAAC,cAAA4G,EAAA7G,EAAA,CAAM8G,MAAI,GACR/G,EAAAC,EAAAC,cAAA4G,EAAA7G,EAAM+G,OAAN,CACEC,MAAO1B,EAAK2B,OACZC,MAAM,iFACNC,MAAOpH,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACiH,SAAU,SAAUC,IAAOA,IAAO/B,EAAKgC,MAAMC,UAAU,OAAWC,OAAO,uBAEhGzH,EAAAC,EAAAC,cAAA4G,EAAA7G,EAAMyH,KAAN,KACE1H,EAAAC,EAAAC,cAAAyH,EAAA1H,EAAA,CAAY2H,KAAK,OACjB5H,EAAAC,EAAAC,cAAA,OAAK2H,UAAU,gBAAgBtC,EAAKuC,SACpC9H,EAAAC,EAAAC,cAAAyH,EAAA1H,EAAA,CAAY2H,KAAK,OAEfrC,EAAKwC,WACL/H,EAAAC,EAAAC,cAAA,OAAK2H,UAAU,eACZ1B,EAAK6B,iBAAiBzC,EAAKwC,WAAYxC,EAAKE,aACtC,GAEXzF,EAAAC,EAAAC,cAAAyH,EAAA1H,EAAA,CAAY2H,KAAK,OACjB5H,EAAAC,EAAAC,cAAA+H,EAAAhI,EAAA,CAAMG,MAAO,CAAC8H,MAAO,kBAAmBb,SAAU,SAChDrH,EAAAC,EAAAC,cAAA+H,EAAAhI,EAAMkI,KAAN,KAAWnI,EAAAC,EAAAC,cAACyF,EAAD,CAAU9F,KAAK,aAAaC,KAAMsI,WAAW7C,EAAK8C,SAASC,QAAQ,MAC9EtI,EAAAC,EAAAC,cAAA+H,EAAAhI,EAAMkI,KAAN,KAAWnI,EAAAC,EAAAC,cAACyF,EAAD,CAAU9F,KAAK,eAAeC,KAAMyF,EAAKgD,SAAUxI,QAAS,WAAOyI,QAAQC,IAAI,QAAQlD,EAAKmD,QACvG1I,EAAAC,EAAAC,cAAA+H,EAAAhI,EAAMkI,KAAN,KAAWnI,EAAAC,EAAAC,cAACyF,EAAD,CAAU9F,KAAK,eAAeC,KAAMyF,EAAKoD,YAAa5I,QAAS,WAAOyI,QAAQC,IAAI,WAAWlD,EAAKmD,aAenHE,gBAAiB,SAAClC,EAAWC,GAAZ,OACf3G,EAAAC,EAAAC,cAAA,OACE0G,IAAKD,EACLvG,MAAO,CACLyI,gBAAiB,UACjB3C,OAAQ,EACR4C,UAAW,oBACXC,aAAc,wBAIpBC,aAAc,kBACZhJ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEyG,QAAS,GAAIoC,UAAW,WACnC9C,EAAK9B,MAAML,UAAY,wBAAW,6BAGvC5D,MAAO,CAAC8F,OAAQgD,SAASC,gBAAgBC,cACzCC,cAAerJ,EAAAC,EAAAC,cAAAoJ,EAAArJ,EAAA,CACb8D,WAAYX,KAAKiB,MAAMN,WACvBF,UAAWT,KAAKS,YAElBW,aAAcpB,KAAKoB,aACnB+E,SAAU,YAlJIC,aCKTC,mLATX,OACEzJ,EAAAC,EAAAC,cAACkG,EAAA,SAAD,KACEpG,EAAAC,EAAAC,cAAAmG,EAAApG,EAAA,CAAQqG,KAAK,QAAb,gBADF,uBAJiBkD,kDCCjBE,EAAKC,EAAQ,MAwCJC,eAlCb,SAAAA,EAAYrG,GAAM,IAAAC,EAAA,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAA4B,KAAAwG,IAChBpG,EAAAhC,OAAAkC,EAAA,EAAAlC,CAAA4B,KAAA5B,OAAAmC,EAAA,EAAAnC,CAAAoI,GAAAhG,KAAAR,KAAMG,KAHRc,MAAQ,CAAEgE,QAAS,IAIjB7E,EAAKqG,WAAarG,EAAKqG,WAAWC,KAAhBtI,OAAAuI,EAAA,EAAAvI,CAAAgC,IAFFA,4EAKN,IAAA2C,EAAA/C,KACNsG,EAAGM,eACL1J,EAAM,wCAGRoJ,EAAGO,cAAc,CACfC,QAAS,eACTC,SAAU,cACVC,OAAQ,QACPC,KAAK,SAAAtI,GACNoE,EAAKrC,SAAS,CAACuE,QAAStG,EAAIkC,KAAKoE,YAChCiC,MAAM,SAAAC,GACPjK,EAAMiK,sCAKR,OACEvK,EAAAC,EAAAC,cAACkG,EAAA,SAAD,KACEpG,EAAAC,EAAAC,cAAAmG,EAAApG,EAAA,CAAQqG,KAAK,QAAb,gBACAtG,EAAAC,EAAAC,cAAAyH,EAAA1H,EAAA,CAAY2H,KAAK,OACjB5H,EAAAC,EAAAC,cAAAsK,EAAAvK,EAAA,CAAQF,QAASqD,KAAKyG,YAAtB,iBACA7J,EAAAC,EAAAC,cAAAyH,EAAA1H,EAAA,CAAY2H,KAAK,OACjB5H,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC6I,UAAW,WAAY7F,KAAKiB,MAAMgE,iBAhClCmB,aCmCNiB,8MA/BbpG,MAAQ,CAAEqG,YAAa,UAEvBC,cAAgB,SAAC1D,EAAOL,EAAKgE,EAAMC,EAAcC,GAAjC,IAAuCC,EAAvC1H,UAAA8B,OAAA,QAAAC,IAAA/B,UAAA,IAAAA,UAAA,UACdrD,EAAAC,EAAAC,cAAA8K,EAAA/K,EAAQkI,KAAR,CACElB,MAAOA,EACPL,IAAKA,EACLgE,KAAM5K,EAAAC,EAAAC,cAAA,KAAGC,MAAO,YAAcyK,IAC9BC,aAAc7K,EAAAC,EAAAC,cAAA,KAAGC,MAAO,YAAc0K,IACtCI,SAAUzH,EAAKa,MAAMqG,cAAgB9D,EACrCsE,QAAS,WAAO1H,EAAKM,SAAS,CAAC4G,YAAa9D,KAC5CmE,MAAOA,GAEP/K,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC8F,OAAQgD,SAASC,gBAAgBC,aAAe,KAAM0B,6EAKrE,OACE9K,EAAAC,EAAAC,cAAA8K,EAAA/K,EAAA,CACEkL,oBAAoB,UACpBC,UAAU,UACVC,aAAa,SAEZjI,KAAKuH,cAAc,eAAM,OAAQ,YAAa,aAAc3K,EAAAC,EAAAC,cAACoL,EAAD,OAC5DlI,KAAKuH,cAAc,eAAM,MAAO,sBAAuB,uBAAwB3K,EAAAC,EAAAC,cAACqL,EAAD,MAAc,GAC7FnI,KAAKuH,cAAc,eAAM,KAAM,aAAc,kBAAmB3K,EAAAC,EAAAC,cAACsL,GAAD,eA3BvDhC,aCJlBiC,IAASC,OAAO1L,EAAAC,EAAAC,cAACyL,GAAD,MAASzC,SAAS0C,eAAe,4CCJjD,SAAAC,GAAAC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GA0DaD,GA1DbH,EAAA,KAGaO,IAAQ,iBAAkB,OAAQ,CAACC,SAAU,UAuDnC,SAACC,GACtB,MAvDiB,wBAuDGA","file":"static/js/main.7e61399d.chunk.js","sourcesContent":["import React from 'react';\nimport { Toast } from 'antd-mobile';\n\nexport const IconText = ({ type, text, onClick }) => (\n  <span onClick={onClick}>\n    <i class={'iconfont ' + type} style={{ marginRight: 8 }}></i>\n    {text}\n  </span>\n);\n\nexport const toast = (msg) => {\n  Toast.info(msg, 1);\n}","import { Api, JsonRpc } from 'eosjs'\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig'; \n\nconst appName = '微文';\nconst contract = 'weiwendapps2';\n\nconst network = {\n  blockchain: 'eos',\n  protocol: 'https',\n  host: 'api.jungle.alohaeos.com',\n  port: 443,\n  chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n};\n\nconst signatureProvider = new JsSignatureProvider(['5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr']);\nconst url = network.protocol + '://' + network.host + ':' + network.port;\n\nconst rpc = new JsonRpc(url, { fetch })\nconst api = new Api({\n  rpc,\n  signatureProvider,\n  chainId: network.chainId,\n  textDecoder: new TextDecoder(),\n  textEncoder: new TextEncoder(),\n});\n\nexport { api, rpc, network, appName, contract }","import { rpc, contract } from './config'\n\nexport const fetchAll = async (table, options) => {\n  const res = await rpc.get_table_rows({\n    json: true,             \n    code: contract,     \n    scope: contract,      \n    table,        \n    limit: 9999,       \n    reverse: true, \n    key_type: 'i64',\n    index_position: 1,             \n    ...options,   \n  });\n  return res.rows;\n}\n\nexport const fetchOne = async (table, keyValue) => {\n  const res = await rpc.get_table_rows({\n    json: true,                \n    code: contract,          \n    scope: contract,           \n    table,          \n    lower_bound: keyValue, \n    upper_bound: keyValue,    \n    limit: 1,          \n  });\n  return res.rows[0];\n}\n","import React, { Component, Fragment } from 'react';\nimport { NavBar, ListView, Card, Flex, WhiteSpace, PullToRefresh } from 'antd-mobile';\nimport moment from 'moment';\n\nimport { IconText } from '../utils';\nimport * as ipfsApi from '../api/ipfsApi';\nimport { fetchAll } from '../api/fetch';\n\nconst ROWS_OF_PAGE = 10;  //每页数据条数\n\nclass PostsPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.pageIndex = 0;\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2,\n    });\n\n    this.state = {\n      data: [],\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n    };\n  }\n\n  genOnePageData(pIndex = 0) {\n    const dataOnePage = [];\n    for (let i = 0; i < ROWS_OF_PAGE; i++) {\n      const item = this.state.data[pIndex * ROWS_OF_PAGE + i];\n      if(item !== undefined){\n        dataOnePage.push(item);\n      }\n    }\n    return dataOnePage;\n  }\n\n  async componentDidMount() {\n    const res = await fetchAll('posttable');\n    this.setState({data: res});\n\n    this.rData = this.genOnePageData();\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.rData),\n      refreshing: false,\n      isLoading: false,\n    });\n  }\n\n  onRefresh = async () => {\n    this.setState({ refreshing: true, isLoading: true });\n    const res = await fetchAll('posttable');\n    this.setState({data: res});\n\n    this.rData = this.genOnePageData();\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.rData),\n      refreshing: false,\n      isLoading: false,\n    });\n    this.pageIndex = 0;\n  };\n\n  onEndReached = (event) => {\n    if (this.state.isLoading) return;\n    this.setState({ isLoading: true });\n\n    setTimeout(() => {\n      this.rData = [...this.rData, ...this.genOnePageData(++this.pageIndex)];\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(this.rData),\n        isLoading: false,\n      });\n    }, 600);\n  };\n\n  renderAttachment(type, attachment){\n    if(type === 1){\n      return <a href={attachment}><IconText type='icon-link' text={attachment} /></a> \n    }else if(type === 2){\n      return <a href={ipfsApi.ipfsUrl(attachment)}><IconText type='icon-link' text={attachment} /></a> \n    }else if(type === 3){\n      return (\n        <a href={ipfsApi.ipfsUrl(attachment)} target='_blank' rel='noopener noreferrer'>\n          <img src={ipfsApi.ipfsUrl(attachment)} alt='' style={{width: 230, height: 100}}/>\n        </a>\n      )\n    }\n    return '';\n  }\n\n  render() {\n    const row = (rowData, sectionID, rowID) => {\n      const item = rowData;\n      return (\n        <div key={rowID} style={{ padding: '0 15px' }}>\n          <Card full>\n            <Card.Header\n              title={item.author}\n              thumb='https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png'\n              extra={<span style={{fontSize: '14px'}}>{moment(moment(item.time).valueOf()+8*3600000).format('YYYY-MM-DD HH:mm')}</span>}\n            />\n            <Card.Body>\n              <WhiteSpace size='xs'/>\n              <div className='item-content'>{item.content}</div>\n              <WhiteSpace size='lg'/>\n              {\n                item.attachtype ? \n                <div className='item-attach'>\n                  {this.renderAttachment(item.attachtype, item.attachment)}\n                </div> : ''\n              }\n              <WhiteSpace size='lg'/>\n              <Flex style={{color: 'rgba(0,0,0,.45)', fontSize: '14px'}}>\n                <Flex.Item><IconText type='icon-money' text={parseFloat(item.balance).toFixed(2)} /></Flex.Item>\n                <Flex.Item><IconText type='icon-dianzan' text={item.like_num} onClick={() => {console.log('like:'+item.id)}} /></Flex.Item>\n                <Flex.Item><IconText type='icon-comment' text={item.comment_num} onClick={() => {console.log('comment:'+item.id)}} /></Flex.Item>\n              </Flex>\n            </Card.Body>\n          </Card>\n        </div>\n      );\n    };\n    return (\n      <Fragment>\n        <NavBar mode='dark' rightContent='发布'>\n          微文\n        </NavBar>\n        <ListView\n          dataSource={this.state.dataSource}\n          renderRow={row}\n          renderSeparator={(sectionID, rowID) => (\n            <div \n              key={rowID}\n              style={{\n                backgroundColor: '#F5F5F9',\n                height: 8,\n                borderTop: '1px solid #ECECED',\n                borderBottom: '1px solid #ECECED',\n              }}\n            />\n          )}\n          renderFooter={() => (\n            <div style={{ padding: 10, textAlign: 'center' }}>\n              {this.state.isLoading ? '加载中...' : '加载完成'}\n            </div>\n          )}\n          style={{height: document.documentElement.clientHeight}}\n          pullToRefresh={<PullToRefresh\n            refreshing={this.state.refreshing}\n            onRefresh={this.onRefresh}\n          />}\n          onEndReached={this.onEndReached}\n          pageSize={5}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default PostsPage;","import React, { Component, Fragment } from 'react';\nimport { NavBar } from 'antd-mobile';\n\nclass MsgsPage extends Component {\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar mode='dark'>消息</NavBar>\n        消息\n      </Fragment>\n    )\n  }\n}\n\nexport default MsgsPage;","import React, { Component, Fragment } from 'react';\nimport { NavBar, Button, WhiteSpace } from 'antd-mobile';\nimport { toast } from '../utils';\n\nconst tp = require('tp-eosjs');\n\nclass MyPage extends Component {\n\n  state = { balance: '' }\n\n  constructor(props){\n    super(props);\n    this.onBtnClick = this.onBtnClick.bind(this);\n  }\n\n  onBtnClick(){\n    if(!tp.isConnected()){\n      toast('未连接到 TokenPocket');\n    }\n\n    tp.getEosBalance({\n      account: 'songguo12345',\n      contract: 'eosio.token',\n      symbol: 'EOS',\n    }).then(res => {\n      this.setState({balance: res.data.balance});\n    }).catch(error => {\n      toast(error);\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar mode='dark'>我的</NavBar>\n        <WhiteSpace size='lg'/>\n        <Button onClick={this.onBtnClick}>getEosBalance</Button>\n        <WhiteSpace size='lg'/>\n        <div style={{textAlign: 'center'}}>{this.state.balance}</div>\n      </Fragment>\n    )\n  }\n}\n\nexport default MyPage;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { TabBar } from 'antd-mobile';\nimport PostsPage from './pages/PostsPage';\nimport MsgsPage from './pages/MsgsPage';\nimport MyPage from './pages/MyPage';\n\nclass App extends Component {\n\n  state = { selectedTab: 'home'};  \n\n  createTabItem = (title, key, icon, selectedIcon, page, badge = false) => (\n    <TabBar.Item\n      title={title}\n      key={key}\n      icon={<i class={'iconfont ' + icon}></i>}\n      selectedIcon={<i class={'iconfont ' + selectedIcon}></i>}\n      selected={this.state.selectedTab === key}\n      onPress={() => {this.setState({selectedTab: key})}}\n      badge={badge}\n    >\n      <div style={{height: document.documentElement.clientHeight - 50}}>{page}</div>\n    </TabBar.Item>\n  )\n\n  render(){\n    return (\n      <TabBar\n        unselectedTintColor='#949494'\n        tintColor='#33A3F4'\n        barTintColor='white'\n      >\n        {this.createTabItem('首页', 'home', 'icon-home', 'icon-home1', <PostsPage />)}\n        {this.createTabItem('消息', 'msg', 'icon-xiaoxi-control', 'icon-xiaoxi-control1', <MsgsPage />, 1)}\n        {this.createTabItem('我的', 'my', 'icon-geren', 'icon-geren-copy', <MyPage />)}\n      </TabBar>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import IpfsAPI from 'ipfs-api';\nimport axios from 'axios';\n\nconst ipfs = IpfsAPI('ipfs.infura.io', '5001', {protocol: 'https'});\nconst ipfsPrefix = 'https://ipfs.io/ipfs/';\n\nconst pinataApiKey = '7f6281d069410fd3a2c7';\nconst pinataSecretApiKey = '5dd9ef467c830d553d8e47ab91d22d76aa5280f756e614625bcc79d5e5960258';\n\n/**\n * 保存文件到IPFS\n */\nexport const saveFileToIPFS = (file) => {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      const buffer = Buffer.from(reader.result);\n      ipfs.add(buffer).then(res => {\n        resolve(res[0].hash);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  });\n};\n\n/**\n * 保存文本到IPFS\n */\nexport const saveTextToIPFS = (text) => {\n  return new Promise((resolve, reject) => {\n    const descBuf = Buffer.from(text, 'utf-8');\n    ipfs.add(descBuf).then(res => {\n      resolve(res[0].hash);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n};\n\n/**\n * 从IPFS读取文本\n */\nexport const readTextFromIPFS = (hash) => {\n  return new Promise((resolve, reject) => {\n    ipfs.cat(hash).then(res => {\n      let content = new TextDecoder('utf-8').decode(res);\n      resolve(content);\n    }).catch(error => {\n      console.log(error);\n    });\n  });\n};\n\n/**\n * 通过哈希值访问IPFS上的文件 \n */\nexport const ipfsUrl = (hash) => {\n  return ipfsPrefix + hash;\n};\n\n/**\n * 使用Infura固定服务\n */\nexport const pinByInfura = (hash) => {\n  axios.get('https://ipfs.infura.io:5001/api/v0/pin/add?arg=/ipfs/' + hash)\n  .then(res => {\n    console.log(res);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n};\n\n/**\n * 使用Pinata固定服务\n */\nexport const pinByPinata = (hash) => {\n  axios.post('https://api.pinata.cloud/pinning/pinHashToIPFS',\n    { hashToPin: hash },\n    { headers: \n      {\n        'pinata_api_key': pinataApiKey,\n        'pinata_secret_api_key': pinataSecretApiKey,\n      }\n    }).then(res => {\n      console.log(res);    \n    }).catch(function (error) {\n      console.log(error);\n    });\n}\n"],"sourceRoot":""}